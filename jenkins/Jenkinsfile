pipeline {
    agent any

    environment {
        SPLUNK_HEC_TOKEN = credentials('3366c860-b822-4ee9-8cfe-398871d88cc5')
    }

    stages {
        stage('Install Dependencies') {
            steps {
                bat 'npm install'
                bat '''
                    curl -k -X POST "https://127.0.0.1:8088/services/collector/event" ^
                    -H "Authorization: Splunk %SPLUNK_HEC_TOKEN%" ^
                    -H "Content-Type: application/json" ^
                    -d "{\\"event\\": \\"Dependencies installed\\", \\"sourcetype\\": \\"pipeline_stage\\", \\"index\\": \\"vite_logs\\"}"
                '''
            }
        }

        stage('Run Tests') {
            steps {
                bat 'npm test'
                bat '''
                    curl -k -X POST "https://127.0.0.1:8088/services/collector/event" ^
                    -H "Authorization: Splunk %SPLUNK_HEC_TOKEN%" ^
                    -H "Content-Type: application/json" ^
                    -d "{\\"event\\": \\"Tests executed successfully\\", \\"sourcetype\\": \\"pipeline_stage\\", \\"index\\": \\"vite_logs\\"}"
                '''
            }
        }

        stage('Approval') {
            steps {
                bat '''
                    curl -k -X POST "https://127.0.0.1:8088/services/collector/event" ^
                    -H "Authorization: Splunk %SPLUNK_HEC_TOKEN%" ^
                    -H "Content-Type: application/json" ^
                    -d "{\\"event\\": \\"Waiting for manual approval\\", \\"sourcetype\\": \\"approval\\", \\"index\\": \\"vite_logs\\"}"
                '''
                input message: 'Approve deployment?', ok: 'Yes'
                bat '''
                    curl -k -X POST "https://127.0.0.1:8088/services/collector/event" ^
                    -H "Authorization: Splunk %SPLUNK_HEC_TOKEN%" ^
                    -H "Content-Type: application/json" ^
                    -d "{\\"event\\": \\"Approval received: yes\\", \\"sourcetype\\": \\"approval\\", \\"index\\": \\"vite_logs\\"}"
                '''
            }
        }

        stage('Create ServiceNow Ticket') {
            steps {
                script {
                    try {
                        def response = httpRequest(
                            url: 'https://example.servicenow.com/api/now/table/incident',
                            httpMode: 'POST',
                            contentType: 'APPLICATION_JSON',
                            requestBody: '{"short_description": "Deployment Approval Received", "urgency": "2"}',
                            authentication: 'your-correct-servicenow-cred-id' // Replace this with actual ID
                        )
                        echo "ServiceNow ticket created. Response: ${response.status}"
                    } catch (err) {
                        echo "Failed to create ServiceNow ticket: ${err}"
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deploying application...'
                bat '''
                    curl -k -X POST "https://127.0.0.1:8088/services/collector/event" ^
                    -H "Authorization: Splunk %SPLUNK_HEC_TOKEN%" ^
                    -H "Content-Type: application/json" ^
                    -d "{\\"event\\": \\"Deployment stage completed\\", \\"sourcetype\\": \\"deployment\\", \\"index\\": \\"vite_logs\\"}"
                '''
            }
        }
    }

    post {
        always {
            emailext(
                to: 'veda@middlewaretalents.com',
                from: 'vedasamhitha1978@gmail.com',
                subject: "ðŸ”” Jenkins Build - ${env.JOB_NAME} #${env.BUILD_NUMBER} - ${currentBuild.currentResult}",
                body: """Hello,

The Jenkins build for job '${env.JOB_NAME}' has completed with status: ${currentBuild.currentResult}.

ðŸ‘‰ Console Output: ${env.BUILD_URL}

Regards,
Jenkins Pipeline
"""
            )
        }
    }
}